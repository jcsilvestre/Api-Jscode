# Upstream para a API
upstream api_backend {
    server api:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

# Servidor HTTP principal
server {
    listen 80;
    server_name localhost api.jcscode.com jcscode.com www.jcscode.com;
    
    # Configurações de segurança
    server_tokens off;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Configurações de proxy
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # CORS headers para todas as rotas
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, Expires" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Max-Age "3600" always;
    
    # Handle preflight requests
    location ~* ^.+\.(OPTIONS)$ {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, Expires" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "3600" always;
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }
    
    # Health check endpoint
    location /health {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://api_backend;
        access_log off;
    }
    
    # API routes
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://api_backend/;
    }
    
    # Auth routes with stricter rate limiting
    location ~ ^/(auth|login|register) {
        limit_req zone=auth_limit burst=10 nodelay;
        proxy_pass http://api_backend;
    }
    
    # API documentation
    location /docs {
        limit_req zone=api_limit burst=10 nodelay;
        proxy_pass http://api_backend/docs;
    }
    
    # Static files
    location /uploads/ {
        alias /app/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # HTML files
    location ~ \.html$ {
        root /usr/share/nginx/html;
        expires 1h;
        add_header Cache-Control "public";
        try_files $uri $uri/ =404;
    }
    
    # Root location
    location / {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://api_backend;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    location = /404.html {
        root /usr/share/nginx/html;
    }
}